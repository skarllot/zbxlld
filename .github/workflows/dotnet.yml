# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest
    defaults: 
      run: 
        shell: bash

    steps:
    - name: 🛡️ Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          aka.ms:443
          api.codecov.io:443
          api.nuget.org:443
          auth.docker.io:443
          cli.codecov.io:443
          dotnetcli.azureedge.net:443
          github.com:443
          objects.githubusercontent.com:443
          production.cloudflare.docker.com:443
          registry-1.docker.io:443
          storage.googleapis.com:443

    - name: 🛒 Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        fetch-depth: 0

    - name: 🧰 Setup .NET
      uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0
      with:
        global-json-file: global.json

    - name: 🗃️ Setup NuGet cache
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: ${{ runner.os }}-nuget-

    - name: 📥 Restore dependencies
      run: dotnet restore --locked-mode

    - name: 🏗️ Build
      run: dotnet build --no-restore

    - name: ✅ Test AOT
      run: dotnet publish -r win-x64 -c Release
